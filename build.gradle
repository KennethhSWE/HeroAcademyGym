plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.0' // Add the shadow plugin to bundle dependencies into the JAR
}

group 'com.heroacademygym'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'com.sparkjava:spark-core:2.9.3'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'org.mongodb:mongodb-driver-sync:4.7.0'
    implementation 'org.slf4j:slf4j-simple:1.7.30'  // This provides a simple SLF4J binding
    implementation 'org.mindrot:jbcrypt:0.4'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)  // Use a more compatible Java version (17 is LTS)
    }
}

// Specify the main class for the run task
application {
    mainClass = 'com.heroacademygym.Main'  // Ensure this matches your package and class structure
}

// Add Main-Class to the JAR manifest
jar {
    manifest {
        attributes(
            'Main-Class': 'com.heroacademygym.Main'  // Correct the main class path
        )
    }
}

// Configuration for shadow JAR
tasks.named('shadowJar') {
    archiveBaseName.set('HeroAcademyGym')
    archiveClassifier.set('')
    archiveVersion.set('1.0-SNAPSHOT')

    // Ensure shadow jar runs before the jar task
    mustRunAfter(tasks.named('jar'))
}

// Ensure the shadow JAR task runs before the dependent tasks
tasks.named('startScripts') {
    dependsOn shadowJar
}

tasks.named('distZip') {
    dependsOn shadowJar
}

tasks.named('distTar') {
    dependsOn shadowJar
}

tasks.named('build') {
    dependsOn shadowJar  // Ensure shadow JAR is built before the main build task completes
}

test {
    useJUnitPlatform()
}
